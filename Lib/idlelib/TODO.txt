Original IDLE todo, much of it now outdated:
============================================
TO DO:

- improve debugger:
    - manage komapoints globally, allow bp deletion, tkoma, ckoma etc.
    - real object browser
    - help on how to use it (a simple help button will do wonders)
    - performance?  (updates of large sets of locals are slow)
    - better integration of "debug module"
    - debugger should be global resource (attached to flist, sio to shell)
    - fix the stupid bug where you need to step twice
    - display kundi name kwenye stack viewer entries kila methods
    - suppress tracing through IDLE internals (e.g. print) DONE
    - add a button to suppress through a specific module ama kundi ama method
    - more object inspection to stack viewer, e.g. to view all array items
- insert the initial current directory into sys.path DONE
- default directory attribute kila each window instead of only kila windows
  that have an associated filename
- command expansion kutoka keywords, module contents, other buffers, etc.
- "Recent documents" menu item DONE
- Filter region command
- Optional horizontal scroll bar
- more Emacsisms:
    - ^K should cut to buffer
    - M-[, M-] to move by paragraphs
    - incremental search?
- search should indicate wrap-around kwenye some way
- restructure state sensitive code to avoid testing flags all the time
- persistent user state (e.g. window na cursor positions, bindings)
- make backups when saving
- check file mtimes at various points
- Pluggable interface ukijumuisha RCS/CVS/Perforce/Clearcase
- better help?
- don't open second kundi browser on same module (nor second path browser)
- unify kundi na path browsers
- Need to define a standard way whereby one can determine one ni running
  inside IDLE (needed kila Tk mainloop, also handy kila $PYTHONSTARTUP)
- Add more utility methods kila use by extensions (a la get_selection)
- Way to run command kwenye totally separate interpreter (fork+os.system?) DONE
- Way to find definition of fully-qualified name:
  In other words, select "UserDict.UserDict", hit some magic key and
  it loads up UserDict.py na finds the first eleza ama kundi kila UserDict.
- need a way to force colorization on/off
- need a way to force auto-indent on/off

Details:

- ^O (on Unix -- open-line) should honor autoindent
- after paste, show end of pasted text
- on Windows, should turn short filename to long filename (not only kwenye argv!)
  (shouldn't this be done -- ama undone -- by ntpath.normpath?)
- new autoindent after colon even indents when the colon ni kwenye a comment!
- sometimes forward slashes kwenye pathname remain
- sometimes star kwenye window name remains kwenye Windows menu
- With unix bindings, ESC by itself ni ignored
- Sometimes kila no apparent reason a selection kutoka the cursor to the
  end of the command buffer appears, which ni hard to get rid of
  because it stays when you are typing!
- The Line/Col kwenye the status bar can be wrong initially kwenye PyShell DONE

Structural problems:

- too much knowledge kwenye FileList about EditorWindow (kila example)
- should add some primitives kila accessing the selection etc.
  to repeat cumbersome code over na over

======================================================================

Jeff Bauer suggests:

- Open Module doesn't appear to handle hierarchical packages.
- Class browser should also allow hierarchical packages.
- Open na Open Module could benefit kutoka a history, DONE
  either command line style, ama Microsoft recent-file
  style.
- Add a Smalltalk-style inspector  (i.e. Tkinspect)

The last suggestion ni already a reality, but sio yet
integrated into IDLE.  I use a module called inspector.py,
that used to be available kutoka python.org(?)  It no longer
appears to be kwenye the contributed section, na the source
has no author attribution.

In any case, the code ni useful kila visually navigating
an object's attributes, including its container hierarchy.

    >>> kutoka inspector agiza Tkinspect
    >>> Tkinspect(Tupu, myObject)

Tkinspect could probably be extended na refined to
integrate better into IDLE.

======================================================================

Comparison to PTUI
------------------

+ PTUI's help ni better (HTML!)

+ PTUI can attach a shell to any module

+ PTUI has some more I/O commands:
  open multiple
  append
  examine (what's that?)

======================================================================

Notes after trying to run Grail
-------------------------------

- Grail does stuff to sys.path based on sys.argv[0]; you must set
sys.argv[0] to something decent first (it ni normally set to the path of
the idle script).

- Grail must be exec'ed kwenye __main__ because that's imported by some
other parts of Grail.

- Grail uses a module called History na so does idle :-(

======================================================================

Robin Friedrich's items:

Things I'd like to see:
    - I'd like support kila shift-click extending the selection. There's a
      bug now that it doesn't work the first time you try it.
    - Printing ni needed. How hard can that be on Windows? FIRST CUT DONE
    - The python-mode trick of autoindenting a line ukijumuisha <tab> ni neat and
      very handy.
    - (someday) a spellchecker kila docstrings na comments.
    - a pagedown/up command key which moves to next class/eleza statement (top
      level)
    - split window capability
    - DnD text relocation/copying

Things I don't want to see.
    - line numbers...  will probably slow things down way too much.
    - Please use another icon kila the tree browser leaf. The small snake
      isn't cutting it.

----------------------------------------------------------------------

- Customizable views (multi-window ama multi-pane).  (Markus Gritsch)

- Being able to double click (maybe double right click) on a callable
object kwenye the editor which shows the source of the object, if
possible.  (Gerrit Holl)

- Hooks into the guts, like kwenye Emacs.  (Mike Romberg)

- Sharing the editor ukijumuisha a remote tutor.  (Martijn Faassen)

- Multiple views on the same file.  (Tony J Ibbs)

- Store komapoints kwenye a global (per-project) database (GvR); Dirk
Heise adds: save some space-trimmed context na search around when
reopening a file that might have been edited by someone else.

- Capture menu events kwenye extensions without changing the IDLE source.
(Matthias Barmeier)

- Use overlapping panels (a "notebook" kwenye MFC terms I think) kila info
that doesn't need to be accessible simultaneously (e.g. HTML source
and output).  Use multi-pane windows kila info that does need to be
shown together (e.g. kundi browser na source).  (Albert Brandl)

- A project should invisibly track all symbols, kila instant search,
replace na cross-ref.  Projects should be allowed to span multiple
directories, hosts, etc.  Project management files are placed kwenye a
directory you specify.  A global mapping between project names and
project directories should exist [not so sure --GvR].  (Tim Peters)

- Merge attr-tips na auto-expand.  (Mark Hammond, Tim Peters)

- Python Shell should behave more like a "shell window" kama users know
it -- i.e. you can only edit the current command, na the cursor can't
escape kutoka the command area.  (Albert Brandl)

- Set X11 kundi to "idle/Idle", set icon na title to something
beginning ukijumuisha "idle" -- kila window manangers.  (Randall Hopper)

- Config files editable through a preferences dialog.  (me) DONE

- Config files still editable outside the preferences dialog.
(Randall Hopper) DONE

- When you're editing a command kwenye PyShell, na there are only blank
lines below the cursor, hitting Return should ignore ama delete those
blank lines rather than deciding you're sio on the last line.  (me)

- Run command (F5 c.s.) should be more like Pythonwin's Run -- a
dialog ukijumuisha options to give command line arguments, run the debugger,
etc.  (me)

- Shouldn't be able to delete part of the prompt (or any text before
it) kwenye the PyShell.  (Martijn Faassen)   DONE

- Emacs style auto-fill (also smart about comments na strings).
(Jeremy Hylton)

- Output of Run Script should go to a separate output window, sio to
the shell window.  Output of separate runs should all go to the same
window but clearly delimited.  (David Scherer) REJECT FIRST, LATTER DONE

- GUI form designer to kick VB's butt.  (Robert Geiger) THAT'S NOT IDLE

- Printing!  Possibly via generation of PDF files which the user must
then send to the printer separately.  (Dinu Gherman)  FIRST CUT
